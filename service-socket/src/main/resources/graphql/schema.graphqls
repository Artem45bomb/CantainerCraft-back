type Query{
    messageId(id:ID):MessageDTO
    messagesSearch(input:MessageSearch):[MessageDTO]!
    findByUserIdChatSecured(userId:Int):[ChatSecuredDTO]!
}



input MessageSearch{
    uuid:ID,
    userId:Int
    chatId:ID

    dateStart:String
    dateEnd:String
    value:String

    pageNumber:Int
    pageSize:Int
    sortDirection:String
    sortColumn:String
}

type MessageDTO {
    uuid:ID,
    text:String,
    date:String,
    isPinned:Boolean,
    userId:Int,
    clientId:String,
    userEmotions:[UserEmotion!]
}


type Emotion{
    uuid:ID,
    unicode:String
}


type UserEmotion{
        uuid:ID,
        emotion:Emotion!,
        userId:String
}


input ChatSecuredSearch{
    userId:Int
}

type ChatSecuredDTO{
    uuid:ID,
    userId:Int,
    chatId:String
}